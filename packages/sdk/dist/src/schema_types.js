"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"schema_types.js","sourceRoot":"","sources":["../../src/schema_types.ts"],"names":[],"mappings":"","sourcesContent":["import type { MfaPolicy } from \"./role\";\nimport type { components, operations } from \"./schema\";\nimport type { JsonMap, JsonValue } from \"./util\";\n\nexport type schemas = components[\"schemas\"];\n\nexport type UserInfo = schemas[\"UserInfo\"];\nexport type UserInOrgMembership = schemas[\"UserInOrgMembership\"];\nexport type ConfiguredMfa = schemas[\"ConfiguredMfa\"];\nexport type RatchetConfig = schemas[\"RatchetConfig\"];\nexport type IdentityProof = schemas[\"IdentityProof\"];\nexport type AddIdentityRequest = schemas[\"AddIdentityRequest\"];\nexport type ListIdentityResponse = schemas[\"ListIdentitiesResponse\"];\nexport type TotpInfo = schemas[\"TotpInfo\"];\n\nexport type OidcAuthResponse = schemas[\"NewSessionResponse\"];\nexport type ApiAddFidoChallenge = schemas[\"FidoCreateChallengeResponse\"];\nexport type ApiMfaFidoChallenge = schemas[\"FidoAssertChallenge\"];\n\nexport type PublicKeyCredentialCreationOptions = schemas[\"PublicKeyCredentialCreationOptions\"];\nexport type PublicKeyCredentialRequestOptions = schemas[\"PublicKeyCredentialRequestOptions\"];\nexport type PublicKeyCredentialParameters = schemas[\"PublicKeyCredentialParameters\"];\nexport type PublicKeyCredentialDescriptor = schemas[\"PublicKeyCredentialDescriptor\"];\nexport type AuthenticatorSelectionCriteria = schemas[\"AuthenticatorSelectionCriteria\"];\nexport type PublicKeyCredentialUserEntity = schemas[\"PublicKeyCredentialUserEntity\"];\nexport type PublicKeyCredential = schemas[\"PublicKeyCredential\"];\n\nexport type OrgInfo = schemas[\"OrgInfo\"];\nexport type PublicOrgInfo = schemas[\"PublicOrgInfo\"];\nexport type UserInOrgInfo = schemas[\"UserInOrgInfo\"];\nexport type UpdateOrgRequest = schemas[\"UpdateOrgRequest\"];\nexport type UpdateOrgResponse = schemas[\"UpdateOrgResponse\"];\nexport type UpdateUserMembershipRequest = schemas[\"UpdateUserMembershipRequest\"];\nexport type NotificationEndpointConfiguration = schemas[\"NotificationEndpointConfiguration\"];\nexport type OrgEvents = schemas[\"OrgEventDiscriminants\"];\nexport type BillingEvent = schemas[\"BillingEvent\"];\nexport type OperationKind = schemas[\"OperationKind\"];\n\nexport type OrgData = schemas[\"OrgData\"];\nexport type UserOrgsResponse = schemas[\"UserOrgsResponse\"];\n\nexport type OidcIdentity = schemas[\"OidcIdentity\"];\nexport type MemberRole = schemas[\"MemberRole\"];\n\nexport type SchemaKeyType = schemas[\"KeyType\"];\n\nexport type ListKeysResponse = schemas[\"PaginatedListKeysResponse\"];\nexport type UpdateKeyRequest = schemas[\"UpdateKeyRequest\"];\nexport type KeyProperties = schemas[\"CreateAndUpdateKeyProperties\"];\nexport type CreateKeyRequest = schemas[\"CreateKeyRequest\"];\nexport type KeyInfo = schemas[\"KeyInfo\"];\nexport type KeyInRoleInfo = schemas[\"KeyInRoleInfo\"];\nexport type GetUsersInOrgResponse = schemas[\"PaginatedGetUsersInOrgResponse\"];\nexport type UserInRoleInfo = schemas[\"UserInRoleInfo\"];\nexport type KeyTypeApi = schemas[\"KeyType\"];\n\nexport type ListKeyRolesResponse = schemas[\"PaginatedListKeyRolesResponse\"];\nexport type ListRolesResponse = schemas[\"PaginatedListRolesResponse\"];\nexport type ListRoleKeysResponse = schemas[\"PaginatedListRoleKeysResponse\"];\nexport type ListRoleUsersResponse = schemas[\"PaginatedListRoleUsersResponse\"];\nexport type UpdateRoleRequest = schemas[\"UpdateRoleRequest\"];\nexport type KeyWithPoliciesInfo = schemas[\"KeyInRoleInfo\"];\nexport type RoleInfo = schemas[\"RoleInfo\"];\nexport type RoleAction = schemas[\"RoleAction\"];\nexport type RestrictedActionsMap = Partial<Record<RoleAction, MemberRole[]>>;\n\nexport type SessionInfo = schemas[\"SessionInfo\"];\nexport type ClientSessionInfo = schemas[\"ClientSessionInfo\"];\nexport type NewSessionResponse = schemas[\"NewSessionResponse\"];\nexport type SessionsResponse = schemas[\"PaginatedSessionsResponse\"];\n\nexport type EditPolicy = schemas[\"EditPolicy\"];\n\nexport type ContactInfo = schemas[\"ContactInfo\"];\nexport type BtcChain = schemas[\"BtcChain\"];\nexport type EvmChain = schemas[\"EvmChain\"];\nexport type SuiChain = schemas[\"SuiChain\"];\nexport type CreateContactRequest = schemas[\"CreateContactRequest\"];\nexport type UpdateContactRequest = schemas[\"UpdateContactRequest\"];\nexport type ListContactsResponse = schemas[\"PaginatedListContactsResponse\"];\n\nexport type CreateSignerSessionRequest = schemas[\"CreateTokenRequest\"];\nexport type RefreshSignerSessionRequest = schemas[\"AuthData\"];\n\nexport type EvmSignRequest = schemas[\"Eth1SignRequest\"];\nexport type EvmSignResponse = schemas[\"Eth1SignResponse\"];\nexport type Eip191SignRequest = schemas[\"Eip191SignRequest\"];\nexport type Eip712SignRequest = schemas[\"Eip712SignRequest\"];\nexport type Eip191Or712SignResponse = schemas[\"SignResponse\"];\nexport type Eth2SignRequest = schemas[\"Eth2SignRequest\"];\nexport type Eth2SignResponse = schemas[\"Eth2SignResponse\"];\nexport type Eth2StakeRequest = schemas[\"StakeRequest\"];\nexport type Eth2StakeResponse = schemas[\"StakeResponse\"];\nexport type Eth2UnstakeRequest = schemas[\"UnstakeRequest\"];\nexport type Eth2UnstakeResponse = schemas[\"UnstakeResponse\"];\nexport type BlobSignRequest = schemas[\"BlobSignRequest\"];\nexport type BlobSignResponse = schemas[\"SignResponse\"];\nexport type BtcSignRequest = schemas[\"BtcSignRequest\"];\nexport type BtcSignResponse = schemas[\"SignResponse\"];\nexport type BtcMessageSignRequest = schemas[\"BtcMessageSignRequest\"];\nexport type BtcMessageSignResponse = schemas[\"BtcMessageSignResponse\"];\nexport type PsbtSignRequest = schemas[\"PsbtSignRequest\"];\nexport type PsbtSignResponse = schemas[\"PsbtSignResponse\"];\nexport type TaprootSignRequest = schemas[\"TaprootSignRequest\"];\nexport type TaprootSignResponse = schemas[\"SignResponse\"];\nexport type EotsSignRequest = schemas[\"EotsSignRequest\"];\nexport type EotsSignResponse = schemas[\"SignResponse\"];\nexport type EotsCreateNonceRequest = schemas[\"EotsCreateNonceRequest\"];\nexport type EotsCreateNonceResponse = schemas[\"EotsCreateNonceResponse\"];\nexport type BabylonStakingRequest = schemas[\"BabylonStakingRequest\"];\nexport type BabylonStakingResponse = schemas[\"BabylonStakingResponse\"];\nexport type BabylonStakingEarlyUnbond = schemas[\"BabylonStakingEarlyUnbond\"];\nexport type BabylonStakingWithdrawal = schemas[\"BabylonStakingWithdrawal\"];\nexport type BabylonRegistrationRequest = schemas[\"BabylonRegistrationRequest\"];\nexport type BabylonRegistrationResponse = schemas[\"BabylonRegistrationResponse\"];\nexport type SolanaSignRequest = schemas[\"SolanaSignRequest\"];\nexport type SolanaSignResponse = schemas[\"SignResponse\"];\nexport type AvaSignRequest = schemas[\"AvaSignRequest\"];\nexport type AvaSignResponse = schemas[\"SignResponse\"];\nexport type AvaSerializedTxSignRequest = schemas[\"AvaSerializedTxSignRequest\"];\nexport type SuiSignRequest = schemas[\"SuiSignRequest\"];\nexport type SuiSignResponse = schemas[\"SignResponse\"];\n\nexport type PendingMessageSignResponse = schemas[\"PendingMessageSignResponse\"];\nexport type PendingMessageInfo = schemas[\"PendingMessageInfo\"];\nexport type EvmTransaction = schemas[\"Transaction\"];\nexport type TypedTransaction = schemas[\"TypedTransaction\"];\nexport type TransactionAndStatus = schemas[\"TransactionAndStatus\"];\nexport type SignedMessage = schemas[\"SignedMessage\"];\nexport type MmiMetadata = schemas[\"MmiMetadata\"];\nexport type MmiStatus = schemas[\"MmiStatus\"];\nexport type Eip191Message = NonNullable<PendingMessageInfo[\"message_eip191\"]>;\nexport type Eip712Message = NonNullable<PendingMessageInfo[\"message_eip712\"]>;\n\nexport type JrpcResponse = schemas[\"JrpcResponse\"];\nexport type MmiJrpcMethod =\n  | \"custodian_listAccounts\"\n  | \"custodian_listAccountsSigned\"\n  | \"custodian_listAccountChainIds\"\n  | \"custodian_createTransaction\"\n  | \"custodian_sign\"\n  | \"custodian_signTypedData\"\n  | \"custodian_getSignedMessageById\"\n  | \"custodian_getTransactionById\"\n  | \"custodian_getCustomerProof\"\n  | \"custodian_replaceTransaction\"\n  | \"custodian_getTransactionLink\"\n  | \"custodian_getSignedMessageLink\";\n\nexport type AcceptedResponse = schemas[\"AcceptedResponse\"];\nexport type ErrorResponse = schemas[\"ErrorResponse\"];\nexport type BtcSignatureKind = schemas[\"BtcSignatureKind\"];\nexport type CsErrCode = schemas[\"SignerErrorCode\"];\n\nexport type MfaType =\n  | \"CubeSigner\"\n  | \"Fido\"\n  | `FidoKey#${string}`\n  | \"Totp\"\n  | \"EmailOtp\"\n  | `EmailOtp#${number}`;\nexport type MfaVote = schemas[\"MfaVote\"];\nexport type MfaRequestInfo = schemas[\"MfaRequestInfo\"];\nexport type MfaProtectedAction = schemas[\"MfaProtectedAction\"];\nexport type MfaRequired = schemas[\"AcceptedValue\"][\"MfaRequired\"];\nexport type EvmTxCmp = schemas[\"EvmTxCmp\"];\nexport type SolanaTxCmp = schemas[\"SolanaTxCmp\"];\n\nexport type CreateOrgRequest = schemas[\"CreateOrgRequest\"];\nexport type OrgMetricName = schemas[\"MetricName\"];\nexport type QueryMetricsRequest = schemas[\"QueryMetricsRequest\"];\nexport type QueryMetricsResponse = schemas[\"QueryMetricsResponse\"];\n\nexport type UserExportInitRequest = schemas[\"UserExportInitRequest\"];\nexport type UserExportInitResponse = schemas[\"UserExportInitResponse\"];\nexport type UserExportCompleteRequest = schemas[\"UserExportCompleteRequest\"];\nexport type UserExportCompleteResponse = schemas[\"UserExportCompleteResponse\"];\nexport type UserExportListResponse = schemas[\"PaginatedUserExportListResponse\"];\nexport type UserExportKeyMaterial = schemas[\"JsonKeyPackage\"];\n\nexport type HistoricalTx = schemas[\"HistoricalTx\"];\nexport type ListHistoricalTxResponse = schemas[\"PaginatedListHistoricalTxResponse\"];\n\nexport type LoginRequest = schemas[\"LoginRequest\"];\nexport type PasskeyAssertChallenge = schemas[\"PasskeyAssertChallenge\"];\nexport type PasskeyAssertAnswer = schemas[\"PasskeyAssertAnswer\"];\nexport type AuthenticationRequest = schemas[\"AuthenticationRequest\"];\nexport type AuthenticationResponse = schemas[\"AuthenticationResponse\"];\nexport type PasswordResetRequest = schemas[\"PasswordResetRequest\"];\nexport type PasswordResetConfirmRequest = schemas[\"PasswordResetConfirmRequest\"];\nexport type EmailOtpResponse = schemas[\"EmailOtpResponse\"];\n\nexport type Empty = schemas[\"EmptyImpl\"];\n\nexport type Scope = schemas[\"Scope\"];\n\n/** Options for a new OIDC user */\nexport interface CreateOidcUserOptions {\n  /** Optional name */\n  name?: string | null;\n  /** The role of an OIDC user, default is \"Alien\" */\n  memberRole?: MemberRole;\n  /** Optional MFA policy to associate with the user account */\n  mfaPolicy?: MfaPolicy;\n}\n\nexport type GetRoleKeyOptions = operations[\"getRoleKey\"][\"parameters\"][\"query\"];\n\n/** Ava P- or X-chain transaction */\nexport type AvaTx = { P: AvaPChainTx } | { X: AvaXChainTx };\n\n/** Ava P-chain transaction */\nexport type AvaPChainTx =\n  | { AddPermissionlessValidator: JsonMap }\n  | { AddSubnetValidator: JsonMap }\n  | { AddValidator: JsonMap }\n  | { CreateChain: JsonMap }\n  | { CreateSubnet: JsonMap }\n  | { Export: JsonMap }\n  | { Import: JsonMap };\n\n/** Ava X-chain transaction */\nexport type AvaXChainTx = { Base: JsonMap } | { Export: JsonMap } | { Import: JsonMap };\n\n/** Ava chains */\nexport type AvaChain = \"C\" | \"X\" | \"P\";\n\n/** Key import */\nexport type CreateKeyImportKeyResponse = schemas[\"CreateKeyImportKeyResponse\"];\nexport type ImportKeyRequest = schemas[\"ImportKeyRequest\"];\nexport type ImportKeyRequestMaterial = schemas[\"ImportKeyRequestMaterial\"];\n\nexport type InvitationAcceptRequest = schemas[\"InvitationAcceptRequest\"];\n\nexport type KeyTypeAndDerivationPath = schemas[\"KeyTypeAndDerivationPath\"];\n\n/**\n * The map holding the addresses associated with a contact.\n */\n// We define this type to provide types for the keys.\n// TODO: we should be able to express key types directly in the schema with utoipa 5.0\nexport type AddressMap = {\n  /**\n   * Bitcoin addresses, each associated with a chain.\n   *\n   * @example {\n   *   \"btc\": \"bc1puc0q8jhx3knc2stlfhl35nja89nvkmqr4c5e2ldyuq2mcckhr3msavj99j\",\n   *   \"btc_signet\": \"tb1qw4m67xp2y4pqdpf0u7vu6q8mpf0naz48zz8ga5\"\n   * }\n   */\n  btc?: {\n    [key in BtcChain]: string;\n  };\n  /**\n   * Either a single EVM address which is allowed for use on any EVM chain, or a set of EVM addresses associated with specific chains.\n   *\n   * @example \"0x372df14129efef558a7acbdcca3d8b2b6167c1dc\"\n   * @example { \"eth\": \"0x372df14129efef558a7acbdcca3d8b2b6167c1dc\", \"eth_holesky\": \"0x52f6c0b306e66893c0414abb70951c4dac15a969\" }\n   */\n  evm?:\n    | string\n    | {\n        [key in EvmChain]: string;\n      };\n  /**\n   * Sui addresses, each associated with a chain.\n   *\n   * @example {\n   *   \"sui\": \"0xf185eadae549b7524d82d46514757d8346f3f122839599fb45a11a91b32aa2ab\",\n   *   \"sui_devnet\": \"0x4e8712e38b09b5467c10fdc40fa7865a65563983eeb74b246df981e61a66b98d\"\n   *  }\n   */\n  sui?: {\n    [key in SuiChain]: string;\n  };\n};\n\nexport type PolicyInfo = schemas[\"PolicyInfo\"];\nexport type UpdatePolicyRequest = schemas[\"UpdatePolicyRequest\"] & {\n  rules?: JsonValue[];\n};\nexport type ListPoliciesResponse = schemas[\"PaginatedListPoliciesResponse\"];\nexport type PolicyType = schemas[\"PolicyType\"];\nexport type PolicyAttachedToId = schemas[\"PolicyAttachedToId\"];\n\nexport type UploadWasmPolicyRequest = schemas[\"UploadWasmPolicyRequest\"];\nexport type UploadWasmPolicyResponse = schemas[\"UploadWasmPolicyResponse\"];\nexport type InvokePolicyRequest = schemas[\"InvokePolicyRequest\"];\nexport type InvokePolicyResponse = schemas[\"InvokePolicyResponse\"];\nexport type WasmPolicyResponse = schemas[\"WasmPolicyResponse\"];\nexport type WasmRule = schemas[\"WasmRule\"];\n\nexport type PolicyEngineConfiguration = schemas[\"PolicyEngineConfiguration\"];\n"]}