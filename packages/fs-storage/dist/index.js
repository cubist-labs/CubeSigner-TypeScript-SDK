"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SIGNER_SESSION_PATH = exports.MANAGEMENT_SESSION_PATH = exports.ROLE_SESSION_PATH = exports.USER_SESSION_PATH = exports.CONFIG_DIR = exports.JsonFileSessionManager = void 0;
exports.defaultUserSessionManager = defaultUserSessionManager;
exports.defaultRoleSessionManager = defaultRoleSessionManager;
exports.defaultManagementSessionManager = defaultManagementSessionManager;
exports.defaultSignerSessionManager = defaultSignerSessionManager;
const path_1 = __importDefault(require("path"));
const _1 = require(".");
const fs_1 = __importDefault(require("fs"));
/** Session storage */
var file_storage_1 = require("./file_storage");
Object.defineProperty(exports, "JsonFileSessionManager", { enumerable: true, get: function () { return file_storage_1.JsonFileSessionManager; } });
/**
 * Directory where CubeSigner stores config files.
 *
 * @returns Config dir
 */
function configDir() {
    const configDir = process.platform === "darwin"
        ? `${process.env.HOME}/Library/Application Support`
        : `${process.env.HOME}/.config`;
    return path_1.default.join(configDir, "cubesigner");
}
/** Directory where CubeSigner stores config files. */
exports.CONFIG_DIR = configDir();
/** Default file path where the management session token is stored. */
exports.USER_SESSION_PATH = path_1.default.join(exports.CONFIG_DIR, "user-session.json");
/** Default file path where the role session token is stored. */
exports.ROLE_SESSION_PATH = path_1.default.join(exports.CONFIG_DIR, "role-session.json");
/** Default file path where the management session token is stored. */
exports.MANAGEMENT_SESSION_PATH = path_1.default.join(exports.CONFIG_DIR, "management-session.json");
/** Default file path where the signer session token is stored. */
exports.SIGNER_SESSION_PATH = path_1.default.join(exports.CONFIG_DIR, "signer-session.json");
/**
 * @returns Session manager using the default user session on disk.
 */
function defaultUserSessionManager() {
    if (fs_1.default.existsSync(exports.USER_SESSION_PATH)) {
        return new _1.JsonFileSessionManager(exports.USER_SESSION_PATH);
    }
    // If no user session, fall back to management session for backwards compatibility
    return new _1.JsonFileSessionManager(exports.MANAGEMENT_SESSION_PATH);
}
/**
 * @returns Session manager using the default role session on disk.
 */
function defaultRoleSessionManager() {
    if (fs_1.default.existsSync(exports.ROLE_SESSION_PATH)) {
        return new _1.JsonFileSessionManager(exports.ROLE_SESSION_PATH);
    }
    // If no role session, fall back to signer session for backwards compatibility
    return new _1.JsonFileSessionManager(exports.SIGNER_SESSION_PATH);
}
/**
 * @deprecated Use `defaultUserSessionManager` instead.
 *
 * @returns Manager pointing to the default management session file on disk.
 */
function defaultManagementSessionManager() {
    return new _1.JsonFileSessionManager(exports.MANAGEMENT_SESSION_PATH);
}
/**
 * @deprecated Use `defaultRoleSessionManager` instead.
 *
 * @returns Manager pointing to the default signer session file on disk.
 */
function defaultSignerSessionManager() {
    return new _1.JsonFileSessionManager(exports.SIGNER_SESSION_PATH);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBc0NBLDhEQU1DO0FBS0QsOERBTUM7QUFPRCwwRUFFQztBQU9ELGtFQUVDO0FBekVELGdEQUF3QjtBQUN4Qix3QkFBMkM7QUFDM0MsNENBQW9CO0FBRXBCLHNCQUFzQjtBQUN0QiwrQ0FBa0Y7QUFBekUsc0hBQUEsc0JBQXNCLE9BQTBCO0FBRXpEOzs7O0dBSUc7QUFDSCxTQUFTLFNBQVM7SUFDaEIsTUFBTSxTQUFTLEdBQ2IsT0FBTyxDQUFDLFFBQVEsS0FBSyxRQUFRO1FBQzNCLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSw4QkFBOEI7UUFDbkQsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLFVBQVUsQ0FBQztJQUNwQyxPQUFPLGNBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFFRCxzREFBc0Q7QUFDekMsUUFBQSxVQUFVLEdBQUcsU0FBUyxFQUFFLENBQUM7QUFFdEMsc0VBQXNFO0FBQ3pELFFBQUEsaUJBQWlCLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxrQkFBVSxFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFFNUUsZ0VBQWdFO0FBQ25ELFFBQUEsaUJBQWlCLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxrQkFBVSxFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFFNUUsc0VBQXNFO0FBQ3pELFFBQUEsdUJBQXVCLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxrQkFBVSxFQUFFLHlCQUF5QixDQUFDLENBQUM7QUFFeEYsa0VBQWtFO0FBQ3JELFFBQUEsbUJBQW1CLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxrQkFBVSxFQUFFLHFCQUFxQixDQUFDLENBQUM7QUFFaEY7O0dBRUc7QUFDSCxTQUFnQix5QkFBeUI7SUFDdkMsSUFBSSxZQUFFLENBQUMsVUFBVSxDQUFDLHlCQUFpQixDQUFDLEVBQUUsQ0FBQztRQUNyQyxPQUFPLElBQUkseUJBQXNCLENBQUMseUJBQWlCLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBQ0Qsa0ZBQWtGO0lBQ2xGLE9BQU8sSUFBSSx5QkFBc0IsQ0FBQywrQkFBdUIsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLHlCQUF5QjtJQUN2QyxJQUFJLFlBQUUsQ0FBQyxVQUFVLENBQUMseUJBQWlCLENBQUMsRUFBRSxDQUFDO1FBQ3JDLE9BQU8sSUFBSSx5QkFBc0IsQ0FBQyx5QkFBaUIsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFDRCw4RUFBOEU7SUFDOUUsT0FBTyxJQUFJLHlCQUFzQixDQUFDLDJCQUFtQixDQUFDLENBQUM7QUFDekQsQ0FBQztBQUVEOzs7O0dBSUc7QUFDSCxTQUFnQiwrQkFBK0I7SUFDN0MsT0FBTyxJQUFJLHlCQUFzQixDQUFDLCtCQUF1QixDQUFDLENBQUM7QUFDN0QsQ0FBQztBQUVEOzs7O0dBSUc7QUFDSCxTQUFnQiwyQkFBMkI7SUFDekMsT0FBTyxJQUFJLHlCQUFzQixDQUFDLDJCQUFtQixDQUFDLENBQUM7QUFDekQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgeyBKc29uRmlsZVNlc3Npb25NYW5hZ2VyIH0gZnJvbSBcIi5cIjtcbmltcG9ydCBmcyBmcm9tIFwiZnNcIjtcblxuLyoqIFNlc3Npb24gc3RvcmFnZSAqL1xuZXhwb3J0IHsgSnNvbkZpbGVTZXNzaW9uTWFuYWdlciBhcyBKc29uRmlsZVNlc3Npb25NYW5hZ2VyIH0gZnJvbSBcIi4vZmlsZV9zdG9yYWdlXCI7XG5cbi8qKlxuICogRGlyZWN0b3J5IHdoZXJlIEN1YmVTaWduZXIgc3RvcmVzIGNvbmZpZyBmaWxlcy5cbiAqXG4gKiBAcmV0dXJucyBDb25maWcgZGlyXG4gKi9cbmZ1bmN0aW9uIGNvbmZpZ0RpcigpOiBzdHJpbmcge1xuICBjb25zdCBjb25maWdEaXIgPVxuICAgIHByb2Nlc3MucGxhdGZvcm0gPT09IFwiZGFyd2luXCJcbiAgICAgID8gYCR7cHJvY2Vzcy5lbnYuSE9NRX0vTGlicmFyeS9BcHBsaWNhdGlvbiBTdXBwb3J0YFxuICAgICAgOiBgJHtwcm9jZXNzLmVudi5IT01FfS8uY29uZmlnYDtcbiAgcmV0dXJuIHBhdGguam9pbihjb25maWdEaXIsIFwiY3ViZXNpZ25lclwiKTtcbn1cblxuLyoqIERpcmVjdG9yeSB3aGVyZSBDdWJlU2lnbmVyIHN0b3JlcyBjb25maWcgZmlsZXMuICovXG5leHBvcnQgY29uc3QgQ09ORklHX0RJUiA9IGNvbmZpZ0RpcigpO1xuXG4vKiogRGVmYXVsdCBmaWxlIHBhdGggd2hlcmUgdGhlIG1hbmFnZW1lbnQgc2Vzc2lvbiB0b2tlbiBpcyBzdG9yZWQuICovXG5leHBvcnQgY29uc3QgVVNFUl9TRVNTSU9OX1BBVEggPSBwYXRoLmpvaW4oQ09ORklHX0RJUiwgXCJ1c2VyLXNlc3Npb24uanNvblwiKTtcblxuLyoqIERlZmF1bHQgZmlsZSBwYXRoIHdoZXJlIHRoZSByb2xlIHNlc3Npb24gdG9rZW4gaXMgc3RvcmVkLiAqL1xuZXhwb3J0IGNvbnN0IFJPTEVfU0VTU0lPTl9QQVRIID0gcGF0aC5qb2luKENPTkZJR19ESVIsIFwicm9sZS1zZXNzaW9uLmpzb25cIik7XG5cbi8qKiBEZWZhdWx0IGZpbGUgcGF0aCB3aGVyZSB0aGUgbWFuYWdlbWVudCBzZXNzaW9uIHRva2VuIGlzIHN0b3JlZC4gKi9cbmV4cG9ydCBjb25zdCBNQU5BR0VNRU5UX1NFU1NJT05fUEFUSCA9IHBhdGguam9pbihDT05GSUdfRElSLCBcIm1hbmFnZW1lbnQtc2Vzc2lvbi5qc29uXCIpO1xuXG4vKiogRGVmYXVsdCBmaWxlIHBhdGggd2hlcmUgdGhlIHNpZ25lciBzZXNzaW9uIHRva2VuIGlzIHN0b3JlZC4gKi9cbmV4cG9ydCBjb25zdCBTSUdORVJfU0VTU0lPTl9QQVRIID0gcGF0aC5qb2luKENPTkZJR19ESVIsIFwic2lnbmVyLXNlc3Npb24uanNvblwiKTtcblxuLyoqXG4gKiBAcmV0dXJucyBTZXNzaW9uIG1hbmFnZXIgdXNpbmcgdGhlIGRlZmF1bHQgdXNlciBzZXNzaW9uIG9uIGRpc2suXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0VXNlclNlc3Npb25NYW5hZ2VyKCk6IEpzb25GaWxlU2Vzc2lvbk1hbmFnZXIge1xuICBpZiAoZnMuZXhpc3RzU3luYyhVU0VSX1NFU1NJT05fUEFUSCkpIHtcbiAgICByZXR1cm4gbmV3IEpzb25GaWxlU2Vzc2lvbk1hbmFnZXIoVVNFUl9TRVNTSU9OX1BBVEgpO1xuICB9XG4gIC8vIElmIG5vIHVzZXIgc2Vzc2lvbiwgZmFsbCBiYWNrIHRvIG1hbmFnZW1lbnQgc2Vzc2lvbiBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgcmV0dXJuIG5ldyBKc29uRmlsZVNlc3Npb25NYW5hZ2VyKE1BTkFHRU1FTlRfU0VTU0lPTl9QQVRIKTtcbn1cblxuLyoqXG4gKiBAcmV0dXJucyBTZXNzaW9uIG1hbmFnZXIgdXNpbmcgdGhlIGRlZmF1bHQgcm9sZSBzZXNzaW9uIG9uIGRpc2suXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0Um9sZVNlc3Npb25NYW5hZ2VyKCk6IEpzb25GaWxlU2Vzc2lvbk1hbmFnZXIge1xuICBpZiAoZnMuZXhpc3RzU3luYyhST0xFX1NFU1NJT05fUEFUSCkpIHtcbiAgICByZXR1cm4gbmV3IEpzb25GaWxlU2Vzc2lvbk1hbmFnZXIoUk9MRV9TRVNTSU9OX1BBVEgpO1xuICB9XG4gIC8vIElmIG5vIHJvbGUgc2Vzc2lvbiwgZmFsbCBiYWNrIHRvIHNpZ25lciBzZXNzaW9uIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICByZXR1cm4gbmV3IEpzb25GaWxlU2Vzc2lvbk1hbmFnZXIoU0lHTkVSX1NFU1NJT05fUEFUSCk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBkZWZhdWx0VXNlclNlc3Npb25NYW5hZ2VyYCBpbnN0ZWFkLlxuICpcbiAqIEByZXR1cm5zIE1hbmFnZXIgcG9pbnRpbmcgdG8gdGhlIGRlZmF1bHQgbWFuYWdlbWVudCBzZXNzaW9uIGZpbGUgb24gZGlzay5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRNYW5hZ2VtZW50U2Vzc2lvbk1hbmFnZXIoKTogSnNvbkZpbGVTZXNzaW9uTWFuYWdlciB7XG4gIHJldHVybiBuZXcgSnNvbkZpbGVTZXNzaW9uTWFuYWdlcihNQU5BR0VNRU5UX1NFU1NJT05fUEFUSCk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBkZWZhdWx0Um9sZVNlc3Npb25NYW5hZ2VyYCBpbnN0ZWFkLlxuICpcbiAqIEByZXR1cm5zIE1hbmFnZXIgcG9pbnRpbmcgdG8gdGhlIGRlZmF1bHQgc2lnbmVyIHNlc3Npb24gZmlsZSBvbiBkaXNrLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdFNpZ25lclNlc3Npb25NYW5hZ2VyKCk6IEpzb25GaWxlU2Vzc2lvbk1hbmFnZXIge1xuICByZXR1cm4gbmV3IEpzb25GaWxlU2Vzc2lvbk1hbmFnZXIoU0lHTkVSX1NFU1NJT05fUEFUSCk7XG59XG4iXX0=